name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: echo ${{ secrets.REGION }}                                                             
  ECR_REPOSITORY: echo ${{ secrets.ECR_URI }}                                                  
  ECS_SERVICE: arn:aws:ecs:us-east-1:140268421650:service/my-go-service/my-go-service-test     
  ECS_CLUSTER: arn:aws:ecs:us-east-1:140268421650:cluster/my-go-service                       
  ECS_TASK_DEFINITION: arn:aws:ecs:us-east-1:140268421650:task-definition/my-go-service:1       
  CONTAINER_NAME: go-aws-test            

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: echo ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: echo ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: echo ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: echo ${{ steps.login.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t go-aws-test:${{ env.IMAGE_TAG }} .
        docker push go-aws-test:${{ env.IMAGE_TAG }}
        echo "image=go-aws-test:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT