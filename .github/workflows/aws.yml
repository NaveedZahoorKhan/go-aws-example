name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION:  ${{ secrets.REGION }}                                                             
  ECR_REPOSITORY: ${{ secrets.ECR_URI }}                                                  
  ECS_SERVICE: arn:aws:ecs:us-east-1:140268421650:service/my-go-service/my-go-service-test     
  ECS_CLUSTER: arn:aws:ecs:us-east-1:140268421650:cluster/my-go-service                       
  ECS_TASK_DEFINITION: arn:aws:ecs:us-east-1:140268421650:task-definition/my-go-service:1       
  CONTAINER_NAME: go-aws-test            

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ secrets.ECR_URI }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG