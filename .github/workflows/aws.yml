name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION:  ${{ secrets.REGION }}                                                             
  ECR_REPOSITORY: ${{ secrets.ECR_URI }}                                                  
  ECS_SERVICE: my-go-service     
  ECS_CLUSTER: my-go-service                       
  ECS_TASK_DEFINITION: my-go-service:1    
  CONTAINER_NAME: go-aws-test            

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}

    - name: Docker ECR
      # You may pin to the exact commit or the version.
      # uses: appleboy/docker-ecr-action@174bc7ab545bf5c4f4492240c4d839a987643559
      uses: appleboy/docker-ecr-action@v0.0.3
      with:
        # amazon access key
        access_key: ${{ env.aws-access-key-id }}
        # amazon secret access key
        secret_key: # ${{ env.aws-secret-access-key }}
        # docker registry
        # repository name for the image
        repo: 140268421650.dkr.ecr.us-east-1.amazonaws.com/go-aws-test
    - name: ecs-fargate
      # You may pin to the exact commit or the version.
      # uses: Dornach/ecs-fargate@915fc6f680ce0b960339f77cfaac53019e8b41cc
      uses: Dornach/ecs-fargate@v0.2.4
      with:
        # Tags
        tags: latest
        # Service
        service: my-go-service
        # Cluster
        cluster: my-go-service
        # ecr
        ecr: 140268421650.dkr.ecr.us-east-1.amazonaws.com/go-aws-test:latest
        # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-access-key-id: # optional
        # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-secret-access-key: ${{ env.aws-access-key-id }}
        # AWS Session Token
        aws-session-token: ${{ env.aws-secret-access-key }}
        # AWS Region
        aws-region: us-east-1